shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
"ana"+ "ion"
concat("ana", "ion")
concat c("ana", "ion")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data1 <- read.csv(file.choose(), header=TRUE)
View(data1)
View(data1)
runApp()
runApp()
runApp()
runApp()
runApp()
#rate<-data1$Abortion_rate
#Total
#Tax.5.
#views
#likes
#dislikes
#follower_count
#user_tweet_count
#likes !!
#retweets
rate<-data1$views
rate<-data1$views
primaCifra<-function(x) as.numeric(substr(gsub('[0.]', '', x), 1, 1))
frecv<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:length(rate))
{
cifra<-primaCifra(rate[i])
frecv[cifra]<-frecv[cifra]+1
}
total<-sum(frecv)
procent<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
procent[i]<-frecv[i]/total
}
benford<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
benford[i]<-log10(1+ 1/i)
}
diferenta<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
diferenta[i]<-procent[i]-benford[i]
}
frame3<-data.frame(
numere=c("1","2", "3", "4", "5", "6", "7", "8", "9"),
ben=benford,
procente=procent
)
ggplot(data = frame3, aes(x = numere, group=1))+ geom_bar(aes(y = procente), stat = "identity", color=NA, fill="lightblue") + geom_line(aes(y = ben), stat = "identity", color="red")
runApp()
runApp()
runApp()
runApp()
runApp()
rate<-data1$trending_date
primaCifra<-function(x) as.numeric(substr(gsub('[0.]', '', x), 1, 1))
frecv<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:length(rate))
{
cifra<-primaCifra(rate[i])
frecv[cifra]<-frecv[cifra]+1
}
total<-sum(frecv)
procent<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
procent[i]<-frecv[i]/total
}
benford<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
benford[i]<-log10(1+ 1/i)
}
diferenta<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
diferenta[i]<-procent[i]-benford[i]
}
frame3<-data.frame(
numere=c("1","2", "3", "4", "5", "6", "7", "8", "9"),
ben=benford,
procente=procent
)
ggplot(data = frame3, aes(x = numere, group=1))+ geom_bar(aes(y = procente), stat = "identity", color=NA, fill="lightblue") + geom_line(aes(y = ben), stat = "identity", color="red")
data1 <- read.csv(file.choose(), header=TRUE)
View(data1)
rate<-data1$Rating
primaCifra<-function(x) as.numeric(substr(gsub('[0.]', '', x), 1, 1))
frecv<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:length(rate))
{
cifra<-primaCifra(rate[i])
frecv[cifra]<-frecv[cifra]+1
}
total<-sum(frecv)
procent<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
procent[i]<-frecv[i]/total
}
benford<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
benford[i]<-log10(1+ 1/i)
}
diferenta<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
diferenta[i]<-procent[i]-benford[i]
}
frame3<-data.frame(
numere=c("1","2", "3", "4", "5", "6", "7", "8", "9"),
ben=benford,
procente=procent
)
ggplot(data = frame3, aes(x = numere, group=1))+ geom_bar(aes(y = procente), stat = "identity", color=NA, fill="lightblue") + geom_line(aes(y = ben), stat = "identity", color="red")
rate<-data1$Quantity
primaCifra<-function(x) as.numeric(substr(gsub('[0.]', '', x), 1, 1))
frecv<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:length(rate))
{
cifra<-primaCifra(rate[i])
frecv[cifra]<-frecv[cifra]+1
}
total<-sum(frecv)
procent<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
procent[i]<-frecv[i]/total
}
benford<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
benford[i]<-log10(1+ 1/i)
}
diferenta<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
diferenta[i]<-procent[i]-benford[i]
}
frame3<-data.frame(
numere=c("1","2", "3", "4", "5", "6", "7", "8", "9"),
ben=benford,
procente=procent
)
ggplot(data = frame3, aes(x = numere, group=1))+ geom_bar(aes(y = procente), stat = "identity", color=NA, fill="lightblue") + geom_line(aes(y = ben), stat = "identity", color="red")
rate<-data1$Unit.price
primaCifra<-function(x) as.numeric(substr(gsub('[0.]', '', x), 1, 1))
frecv<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:length(rate))
{
cifra<-primaCifra(rate[i])
frecv[cifra]<-frecv[cifra]+1
}
total<-sum(frecv)
procent<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
procent[i]<-frecv[i]/total
}
benford<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
benford[i]<-log10(1+ 1/i)
}
diferenta<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
diferenta[i]<-procent[i]-benford[i]
}
frame3<-data.frame(
numere=c("1","2", "3", "4", "5", "6", "7", "8", "9"),
ben=benford,
procente=procent
)
ggplot(data = frame3, aes(x = numere, group=1))+ geom_bar(aes(y = procente), stat = "identity", color=NA, fill="lightblue") + geom_line(aes(y = ben), stat = "identity", color="red")
rate<-data1$Invoice.ID
primaCifra<-function(x) as.numeric(substr(gsub('[0.]', '', x), 1, 1))
frecv<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:length(rate))
{
cifra<-primaCifra(rate[i])
frecv[cifra]<-frecv[cifra]+1
}
total<-sum(frecv)
procent<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
procent[i]<-frecv[i]/total
}
benford<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
benford[i]<-log10(1+ 1/i)
}
diferenta<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
diferenta[i]<-procent[i]-benford[i]
}
frame3<-data.frame(
numere=c("1","2", "3", "4", "5", "6", "7", "8", "9"),
ben=benford,
procente=procent
)
ggplot(data = frame3, aes(x = numere, group=1))+ geom_bar(aes(y = procente), stat = "identity", color=NA, fill="lightblue") + geom_line(aes(y = ben), stat = "identity", color="red")
rate<-data1$gross.income
primaCifra<-function(x) as.numeric(substr(gsub('[0.]', '', x), 1, 1))
frecv<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:length(rate))
{
cifra<-primaCifra(rate[i])
frecv[cifra]<-frecv[cifra]+1
}
total<-sum(frecv)
procent<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
procent[i]<-frecv[i]/total
}
benford<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
benford[i]<-log10(1+ 1/i)
}
diferenta<-c(0,0,0,0,0,0,0,0,0)
for (i in 1:9)
{
diferenta[i]<-procent[i]-benford[i]
}
frame3<-data.frame(
numere=c("1","2", "3", "4", "5", "6", "7", "8", "9"),
ben=benford,
procente=procent
)
ggplot(data = frame3, aes(x = numere, group=1))+ geom_bar(aes(y = procente), stat = "identity", color=NA, fill="lightblue") + geom_line(aes(y = ben), stat = "identity", color="red")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
install.packages(c("cli", "crayon", "jsonlite", "magrittr", "rappdirs", "Rcpp", "tibble", "tinytex", "xfun"))
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
